@model DXMVC.Demo.Models.Customer

@{
    ViewBag.Title = "Create";
    Action<MVCxFormLayoutItem> TextBoxSettingsMethod = (item) =>
    {
        item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        var tbSettings = (TextBoxSettings)item.NestedExtensionSettings;
        tbSettings.Properties.Password = tbSettings.Name.Contains("Password");
        tbSettings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        tbSettings.Properties.ValidationSettings.ErrorFrameStyle.Border.BorderColor = System.Drawing.Color.Red;
        tbSettings.ShowModelErrors = true;
    };
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

	 @Html.DevExpress().FormLayout(settings =>
	 {
		  settings.Name = "InsertForm";

		  settings.SettingsItems.ShowCaption = DefaultBoolean.True;
		  settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;

		  settings.Items.Add(m => m.FirstName, TextBoxSettingsMethod);
		  settings.Items.Add(m => m.MiddleName, TextBoxSettingsMethod);
		  settings.Items.Add(m => m.LastName, TextBoxSettingsMethod);
		  settings.Items.Add(m => m.Email, TextBoxSettingsMethod);
	 }).GetHtml()
    <p>
        <input type="submit" value="Create" />
    </p>
	 @Html.DevExpress().ValidationSummary(settings =>
    {
        settings.HeaderText = "The following errors occured when submitting the form";
        settings.ShowErrorAsLink = true;
        settings.RenderMode = ValidationSummaryRenderMode.BulletedList;
    }).GetHtml() 
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
